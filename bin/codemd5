#!/bin/bash
if [ "$#" -lt 3 ]; then
    echo "Usage: $0 (-c|-w) --file [string] --args [string]"
    exit 1
fi

option=""
file=""
args=""

while [ "$1" != "" ]; do
    case $1 in
        -c | -w )   option=$1
                    ;;
        --file )    shift
                    file=$1
                    ;;
        --args )    shift
                    args=$1
                    ;;
        * )         echo "Invalid option: $1"
                    exit 1
    esac
    shift
done

if [ -z "$option" ] || [ -z "$file" ]; then
    echo "Missing required arguments"
    exit 1
fi

file=$(echo $file | xargs)
args=$(echo $args | xargs)
if [ ! -f "$file" ]; then
    echo "Error: File '$file' not found."
    exit 1
fi
CODE_EXT=("c" "cpp" "cu" "java" "h" "hpp" "py" "sh" "js" "S" "hs")
file_array=($args)
filenames=()
for element in "${file_array[@]}"; do
    extension="${element##*.}"
    if [[ " ${CODE_EXT[@]} " =~ " ${extension} " ]]; then
        filenames+=("$element")
    fi
done

file_contents=""
for filename in "${filenames[@]}"; do
    if [ ! -f "$filename" ]; then
        continue
    fi
    file_contents+=$(cat "$filename")
done
file_contents+="$args"
content_md5=$(printf "%s" "$file_contents" | md5sum | awk '{ print $1 }')

current_dir=$(pwd)
combined_string="$current_dir$args"
filename_md5=$(printf "%s" "$combined_string" | md5sum | awk '{ print $1 }')

hash_file="/home/jyh/.hash/$filename_md5"

case $option in
-c)
    if [ -f "$hash_file" ]; then
        stored_md5=$(cat "$hash_file")
        if [ "$stored_md5" == "$content_md5" ]; then
            exit 0
        else
            exit 2
        fi
    else
        exit 3
    fi
    ;;
-w)
    echo "$content_md5" > "$hash_file"
    ;;
esac
